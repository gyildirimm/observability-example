version: '3.8'
services:
  observability-api:
    image: observabilityexampleapi
    container_name: observability-api
    build:
      context: .
      dockerfile: ExampleWebAPI/Dockerfile
    ports:
      - "9178:8080"
      - "5005:5005"
      - "9229:9229"
    entrypoint: []
    command: sh -c "dotnet ExampleWebAPI.dll"
    volumes:
      - observabilityapi-data:/app/data
    networks:
      - observability-example-network
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER: 1
      DOTNET_HOSTBUILDER__RELOADCONFIGONCHANGE: false
      DOTNET_RUNNING_IN_CONTAINER: true
      ASPNETCORE_URLS: "http://+:8080"
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      NUGET_FALLBACK_PACKAGES: "/root/.nuget/fallbackpackages"
      ENABLE_DEBUGGER: "True"
    depends_on:
      - observability-seq

  observability-seq:
    image: datalust/seq:latest
    container_name: observability-seq
    ports:
      - "9179:5341"
      - "9180:80"
    environment:
      - ACCEPT_EULA=Y 
    volumes:
      - seq-data:/data
    networks:
      - observability-example-network

  observability-loki:
    image: grafana/loki:latest
    container_name: observability-loki
    user: root
    ports:
      - "9182:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - observability-example-network
    volumes:
      - loki-data:/var/lib/loki
      - .deploy/loki/loki-config.yaml:/etc/loki/local-config.yaml

  observability-promtail:
    image: grafana/promtail:latest
    container_name: observability-promtail
    volumes:
      - /var/log:/var/log
      - .deploy/promtail/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - observability-example-network
    depends_on:
      - observability-loki

  observability-tempo:
    image: grafana/tempo:latest
    container_name: observability-tempo
    user: root
    ports:
      - "9184:3200"
      - "9186:9411"
    command: [ "-config.file=/etc/tempo.yaml" ]
    networks:
      - observability-example-network
    volumes:
      - tempo-data:/var/lib/tempo
      - .deploy/tempo/tempo-config.yaml:/etc/tempo.yaml
    expose:
      - "9095"
      - "4317"
      - "4318"

  observability-prometheus:
    image: prom/prometheus:latest
    container_name: observability-prometheus
    ports:
      - "9188:9090"
    volumes:
      - prometheus-data:/etc/prometheus
      - .deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - observability-example-network
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - observability-api
      - observability-loki
      - observability-tempo

  observability-grafana:
    image: grafana/grafana:latest
    container_name: observability-grafana
    ports:
      - "9190:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - .deploy/grafana/provisioning:/etc/grafana/provisioning
      - .deploy/grafana/dashboards:/etc/grafana/dashboards
    networks:
      - observability-example-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - observability-prometheus
      - observability-loki
      - observability-tempo

networks:
  observability-example-network:
    driver: bridge

volumes:
  observabilityapi-data:
  seq-data:
  loki-data:
  tempo-data:
  prometheus-data:
  grafana-data:
